Please read the INSTALL file before running these commands.

Some examples:

{{{
dejumble /path/to/mount -o root="/",query="",filter="Null",cache="WriteThrough",organizer="Flat",nonempty
dejumble /path/to/mount -o root="/",query="",filter="OriginalDirectory",cache="WriteThrough",organizer="Flat",nonempty
dejumble /path/to/mount -o root="/",query="find ~/Music/ -name *.mp3",filter="Shell",cache="WriteThrough",organizer="Flat",nonempty

dejumble /path/to/mount -o filter="Null",organizer="Flat",nonempty
dejumble /path/to/mount -o root="/",query="",filter="OriginalDirectory",cache="WriteThrough",organizer="Flat",nonempty
dejumble /path/to/mount -o root="/",query="find ~/Music/ -name *.mp3",filter="Shell",cache="WriteThrough",organizer="Flat",nonempty
}}}

to unmount:

{{{
fusermount -u /path/to/mount
}}}

==Filters==

  * `Null` - provides a file 'null' that is a proxy for /dev/null, for testing purposes only.
  * `Shell` - provides a list of files that are proxies for those returned by the shell script defined by 'query'
  * `OriginalDirectory` - provides a list of files that contains all the files present before on the mounting directory

Currently you need to provide a query even for those providers that don't require one.

The `nonempty` flag lets you mount over an existing directory. File contents are preserved in a special directory `.dejumblefs` that contains all the previous directory structure. This directory is not shown, not even with a `ls -a` but you can cd into it.

==Organizers==

  * `Flat` - Just shows the list of files provided 
  * `Documents` - Organizes the files on folders by filetype
  * `Date` - Organizes de files on folders by date

==Requirements==

  * python
  * python-fuse
  * PyDBLite
  * python-xesam (not yet, is there anything like that?)

==Known issues==

  * When editing files in vim they appear as readonly (even though ls -l shows that they are writtable)

